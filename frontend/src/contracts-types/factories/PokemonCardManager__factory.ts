/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common.ts";
import type {
  PokemonCardManager,
  PokemonCardManagerInterface,
} from  "../../assets/PokemonCardManager_mapping.sol/PokemonCardManager.ts";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_level",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_attackPower",
        type: "uint256",
      },
    ],
    name: "CardLevelUp",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "CardTransfered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NewCardCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "cardCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_pokemonType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_rarity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_cardOwner",
        type: "address",
      },
    ],
    name: "createPokemonCard",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyCards",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cardId",
        type: "uint256",
      },
    ],
    name: "getPokemonCardById",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "pokemonType",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rarity",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "level",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attackPower",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "cardOwner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cardId",
        type: "uint256",
      },
    ],
    name: "levelUp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_cardId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferCardOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526000600355348015601457600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c78806100646000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f2578063bc0d17cf14610110578063c65945281461012c578063ed92c4bb146101485761007d565b80630ce90ec2146100825780631b6cde101461009e5780636b0a5f29146100bc575b600080fd5b61009c60048036038101906100979190610f03565b610166565b005b6100a6610442565b6040516100b39190610f3f565b60405180910390f35b6100d660048036038101906100d19190610f03565b610448565b6040516100e9979695949392919061102b565b60405180910390f35b6100fa610652565b60405161010791906110a1565b60405180910390f35b61012a6004803603810190610125919061121d565b610676565b005b610146600480360381019061014191906112a0565b610acd565b005b610150610d20565b60405161015d919061139e565b60405180910390f35b803373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461020b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102029061140c565b60405180910390fd5b6000600160008481526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900460ff16600c81111561025a5761025961142c565b5b600c81111561026c5761026b61142c565b5b81526020016001820160019054906101000a900460ff1660028111156102955761029461142c565b5b60028111156102a7576102a661142c565b5b81526020016002820180546102bb9061148a565b80601f01602080910402602001604051908101604052809291908181526020018280546102e79061148a565b80156103345780601f1061030957610100808354040283529160200191610334565b820191906000526020600020905b81548152906001019060200180831161031757829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505090508060800180518091906103bb906114ea565b815250506001816040015160028111156103d8576103d761142c565b5b6103e29190611532565b81608001516103f19190611566565b8160a00181815250507f10e1ebf9c7a47e4e4ff2bc14d0556b003dc0dbb826023862d3b43aef88af5ff48382608001518360a00151604051610435939291906115a8565b60405180910390a1505050565b60035481565b60006060600080600080600080600160008a81526020019081526020016000206040518060e0016040529081600082015481526020016001820160009054906101000a900460ff16600c8111156104a2576104a161142c565b5b600c8111156104b4576104b361142c565b5b81526020016001820160019054906101000a900460ff1660028111156104dd576104dc61142c565b5b60028111156104ef576104ee61142c565b5b81526020016002820180546105039061148a565b80601f016020809104026020016040519081016040528092919081815260200182805461052f9061148a565b801561057c5780601f106105515761010080835404028352916020019161057c565b820191906000526020600020905b81548152906001019060200180831161055f57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050806000015181606001518260200151600c8111156106125761061161142c565b5b836040015160028111156106295761062861142c565b5b84608001518560a001518660c00151975097509750975097509750975050919395979092949650565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610704576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fb90611651565b60405180910390fd5b6000845111610748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073f906116bd565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ae9061174f565b60405180910390fd5b6001600c808111156107cc576107cb61142c565b5b6107d69190611532565b8310610817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080e906117bb565b60405180910390fd5b600160028081111561082c5761082b61142c565b5b6108369190611532565b8210610877576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086e90611827565b60405180910390fd5b60006003600081548092919061088c906114ea565b91905055905060006040518060e0016040528083815260200186600c8111156108b8576108b761142c565b5b600c8111156108ca576108c961142c565b5b81526020018560028111156108e2576108e161142c565b5b60028111156108f4576108f361142c565b5b8152602001878152602001600181526020016001866109139190611532565b81526020018473ffffffffffffffffffffffffffffffffffffffff16815250905080600160008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff0219169083600c81111561097d5761097c61142c565b5b021790555060408201518160010160016101000a81548160ff021916908360028111156109ad576109ac61142c565b5b021790555060608201518160020190816109c791906119f3565b506080820151816003015560a0820151816004015560c08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208290806001815401808255809150506001900390600052602060002001600090919091909150557f83b235d3cf3c358c64170fac6d2f0a55b20937d86e98f750df977cc245f1ea768287604051610abd929190611ac5565b60405180910390a1505050505050565b813373ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b699061140c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610be1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd890611b67565b60405180910390fd5b60006001600085815260200190815260200160002060050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050826001600086815260200190815260200160002060050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c7b8185610db5565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208490806001815401808255809150506001900390600052602060002001600090919091909150557fe93c0269bc7b23de36b7ffb6cec88a8591254d051d0706eb005ff22eb29e5efc3384604051610d12929190611b87565b60405180910390a150505050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015610dab57602002820191906000526020600020905b815481526020019060010190808311610d97575b5050505050905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060005b8180549050811015610eb35782828281548110610e1b57610e1a611bb0565b5b906000526020600020015403610ea6578160018380549050610e3d9190611bdf565b81548110610e4e57610e4d611bb0565b5b9060005260206000200154828281548110610e6c57610e6b611bb0565b5b906000526020600020018190555081805480610e8b57610e8a611c13565b5b60019003818190600052602060002001600090559055610eb3565b8080600101915050610dfb565b50505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ee081610ecd565b8114610eeb57600080fd5b50565b600081359050610efd81610ed7565b92915050565b600060208284031215610f1957610f18610ec3565b5b6000610f2784828501610eee565b91505092915050565b610f3981610ecd565b82525050565b6000602082019050610f546000830184610f30565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f94578082015181840152602081019050610f79565b60008484015250505050565b6000601f19601f8301169050919050565b6000610fbc82610f5a565b610fc68185610f65565b9350610fd6818560208601610f76565b610fdf81610fa0565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061101582610fea565b9050919050565b6110258161100a565b82525050565b600060e082019050611040600083018a610f30565b81810360208301526110528189610fb1565b90506110616040830188610f30565b61106e6060830187610f30565b61107b6080830186610f30565b61108860a0830185610f30565b61109560c083018461101c565b98975050505050505050565b60006020820190506110b6600083018461101c565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110fe82610fa0565b810181811067ffffffffffffffff8211171561111d5761111c6110c6565b5b80604052505050565b6000611130610eb9565b905061113c82826110f5565b919050565b600067ffffffffffffffff82111561115c5761115b6110c6565b5b61116582610fa0565b9050602081019050919050565b82818337600083830152505050565b600061119461118f84611141565b611126565b9050828152602081018484840111156111b0576111af6110c1565b5b6111bb848285611172565b509392505050565b600082601f8301126111d8576111d76110bc565b5b81356111e8848260208601611181565b91505092915050565b6111fa8161100a565b811461120557600080fd5b50565b600081359050611217816111f1565b92915050565b6000806000806080858703121561123757611236610ec3565b5b600085013567ffffffffffffffff81111561125557611254610ec8565b5b611261878288016111c3565b945050602061127287828801610eee565b935050604061128387828801610eee565b925050606061129487828801611208565b91505092959194509250565b600080604083850312156112b7576112b6610ec3565b5b60006112c585828601610eee565b92505060206112d685828601611208565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61131581610ecd565b82525050565b6000611327838361130c565b60208301905092915050565b6000602082019050919050565b600061134b826112e0565b61135581856112eb565b9350611360836112fc565b8060005b83811015611391578151611378888261131b565b975061138383611333565b925050600181019050611364565b5085935050505092915050565b600060208201905081810360008301526113b88184611340565b905092915050565b7f43616c6c6572206973206e6f74207468652063617264206f776e657200000000600082015250565b60006113f6601c83610f65565b9150611401826113c0565b602082019050919050565b60006020820190508181036000830152611425816113e9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114a257607f821691505b6020821081036114b5576114b461145b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114f582610ecd565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611527576115266114bb565b5b600182019050919050565b600061153d82610ecd565b915061154883610ecd565b92508282019050808211156115605761155f6114bb565b5b92915050565b600061157182610ecd565b915061157c83610ecd565b925082820261158a81610ecd565b915082820484148315176115a1576115a06114bb565b5b5092915050565b60006060820190506115bd6000830186610f30565b6115ca6020830185610f30565b6115d76040830184610f30565b949350505050565b7f43616c6c6572206973206e6f742074686520636f6e7472616374206465706c6f60008201527f7965720000000000000000000000000000000000000000000000000000000000602082015250565b600061163b602383610f65565b9150611646826115df565b604082019050919050565b6000602082019050818103600083015261166a8161162e565b9050919050565b7f43617264206e616d652063616e6e6f7420626520656d70747900000000000000600082015250565b60006116a7601983610f65565b91506116b282611671565b602082019050919050565b600060208201905081810360008301526116d68161169a565b9050919050565b7f43617264206f776e657220616464726573732063616e6e6f74206265207a657260008201527f6f00000000000000000000000000000000000000000000000000000000000000602082015250565b6000611739602183610f65565b9150611744826116dd565b604082019050919050565b600060208201905081810360008301526117688161172c565b9050919050565b7f496e76616c696420506f6b656d6f6e2074797065000000000000000000000000600082015250565b60006117a5601483610f65565b91506117b08261176f565b602082019050919050565b600060208201905081810360008301526117d481611798565b9050919050565b7f496e76616c696420726172697479000000000000000000000000000000000000600082015250565b6000611811600e83610f65565b915061181c826117db565b602082019050919050565b6000602082019050818103600083015261184081611804565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026118a97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261186c565b6118b3868361186c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006118f06118eb6118e684610ecd565b6118cb565b610ecd565b9050919050565b6000819050919050565b61190a836118d5565b61191e611916826118f7565b848454611879565b825550505050565b600090565b611933611926565b61193e818484611901565b505050565b5b818110156119625761195760008261192b565b600181019050611944565b5050565b601f8211156119a75761197881611847565b6119818461185c565b81016020851015611990578190505b6119a461199c8561185c565b830182611943565b50505b505050565b600082821c905092915050565b60006119ca600019846008026119ac565b1980831691505092915050565b60006119e383836119b9565b9150826002028217905092915050565b6119fc82610f5a565b67ffffffffffffffff811115611a1557611a146110c6565b5b611a1f825461148a565b611a2a828285611966565b600060209050601f831160018114611a5d5760008415611a4b578287015190505b611a5585826119d7565b865550611abd565b601f198416611a6b86611847565b60005b82811015611a9357848901518255600182019150602085019450602081019050611a6e565b86831015611ab05784890151611aac601f8916826119b9565b8355505b6001600288020188555050505b505050505050565b6000604082019050611ada6000830185610f30565b8181036020830152611aec8184610fb1565b90509392505050565b7f4e6577206f776e6572206d75737420626520612076616c69642061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b51602183610f65565b9150611b5c82611af5565b604082019050919050565b60006020820190508181036000830152611b8081611b44565b9050919050565b6000604082019050611b9c600083018561101c565b611ba9602083018461101c565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000611bea82610ecd565b9150611bf583610ecd565b9250828203905081811115611c0d57611c0c6114bb565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d3f5137421f307ea82410cb58eee63da3c96b6b8511c8d13431f1454190db0d964736f6c634300081c0033";

type PokemonCardManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PokemonCardManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PokemonCardManager__factory extends ContractFactory {
  constructor(...args: PokemonCardManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PokemonCardManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PokemonCardManager__factory {
    return super.connect(runner) as PokemonCardManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PokemonCardManagerInterface {
    return new Interface(_abi) as PokemonCardManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PokemonCardManager {
    return new Contract(address, _abi, runner) as unknown as PokemonCardManager;
  }
}
